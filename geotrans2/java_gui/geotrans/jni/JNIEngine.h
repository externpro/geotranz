/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class geotrans_jni_JNIEngine */

#ifndef _Included_geotrans_jni_JNIEngine
#define _Included_geotrans_jni_JNIEngine
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNICheckValidConversion
 * Signature: (IIII)I
 */
JNIEXPORT jint JNICALL Java_geotrans_jni_JNIEngine_JNICheckValidConversion
  (JNIEnv *, jobject, jint, jint, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIConvert
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNIConvert
  (JNIEnv *, jobject, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIDefine3ParamDatum
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;DDDDDDDDDD)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNIDefine3ParamDatum
  (JNIEnv *, jobject, jstring, jstring, jstring, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIDefine7ParamDatum
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;DDDDDDD)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNIDefine7ParamDatum
  (JNIEnv *, jobject, jstring, jstring, jstring, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIDefineEllipsoid
 * Signature: (Ljava/lang/String;Ljava/lang/String;DD)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNIDefineEllipsoid
  (JNIEnv *, jobject, jstring, jstring, jdouble, jdouble);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIRemoveDatum
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNIRemoveDatum
  (JNIEnv *, jobject, jstring);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIRemoveEllipsoid
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNIRemoveEllipsoid
  (JNIEnv *, jobject, jstring);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIInitializeEngine
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNIInitializeEngine
  (JNIEnv *, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetConversionErrors
 * Signature: (I)Lgeotrans/gui/Accuracy;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetConversionErrors
  (JNIEnv *, jobject, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetConversionErrors
 * Signature: (IDDD)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetConversionErrors
  (JNIEnv *, jobject, jint, jdouble, jdouble, jdouble);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetCoordinateSystemCode
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_geotrans_jni_JNIEngine_JNIGetCoordinateSystemCode
  (JNIEnv *, jobject, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetCoordinateSystem
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_geotrans_jni_JNIEngine_JNIGetCoordinateSystem
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetCoordinateSystem
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetCoordinateSystem
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetDatum
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_geotrans_jni_JNIEngine_JNIGetDatum
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetDatum
 * Signature: (IIJ)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetDatum
  (JNIEnv *, jobject, jint, jint, jlong);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetDatumCode
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_geotrans_jni_JNIEngine_JNIGetDatumCode
  (JNIEnv *, jobject, jlong);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetDatumCount
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_geotrans_jni_JNIEngine_JNIGetDatumCount
  (JNIEnv *, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetDatumIndex
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_geotrans_jni_JNIEngine_JNIGetDatumIndex
  (JNIEnv *, jobject, jstring);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetDatumName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_geotrans_jni_JNIEngine_JNIGetDatumName
  (JNIEnv *, jobject, jlong);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetDatumEllipsoidCode
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_geotrans_jni_JNIEngine_JNIGetDatumEllipsoidCode
  (JNIEnv *, jobject, jlong);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetEllipsoidCode
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_geotrans_jni_JNIEngine_JNIGetEllipsoidCode
  (JNIEnv *, jobject, jlong);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetEllipsoidCount
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_geotrans_jni_JNIEngine_JNIGetEllipsoidCount
  (JNIEnv *, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetEllipsoidIndex
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_geotrans_jni_JNIEngine_JNIGetEllipsoidIndex
  (JNIEnv *, jobject, jstring);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetEllipsoidName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_geotrans_jni_JNIEngine_JNIGetEllipsoidName
  (JNIEnv *, jobject, jlong);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetPrecision
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetPrecision
  (JNIEnv *, jobject, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetPrecision
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_geotrans_jni_JNIEngine_JNIGetPrecision
  (JNIEnv *, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetAlbersEqualAreaConicParams
 * Signature: (II)Lgeotrans/projections/AlbersEqualAreaConic;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetAlbersEqualAreaConicParams
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetAlbersEqualAreaConicParams
 * Signature: (IILgeotrans/projections/AlbersEqualAreaConic;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetAlbersEqualAreaConicParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetAlbersEqualAreaConicCoordinates
 * Signature: (II)Lgeotrans/projections/AlbersEqualAreaConic;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetAlbersEqualAreaConicCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetAlbersEqualAreaConicCoordinates
 * Signature: (IILgeotrans/projections/AlbersEqualAreaConic;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetAlbersEqualAreaConicCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetAzimuthalEquidistantParams
 * Signature: (II)Lgeotrans/projections/AzimuthalEquidistant;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetAzimuthalEquidistantParams
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetAzimuthalEquidistantParams
 * Signature: (IILgeotrans/projections/AzimuthalEquidistant;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetAzimuthalEquidistantParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetAzimuthalEquidistantCoordinates
 * Signature: (II)Lgeotrans/projections/AzimuthalEquidistant;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetAzimuthalEquidistantCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetAzimuthalEquidistantCoordinates
 * Signature: (IILgeotrans/projections/AzimuthalEquidistant;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetAzimuthalEquidistantCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetBNGCoordinates
 * Signature: (II)Lgeotrans/projections/BNG;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetBNGCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetBNGCoordinates
 * Signature: (IILgeotrans/projections/BNG;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetBNGCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetBonneParams
 * Signature: (II)Lgeotrans/projections/Bonne;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetBonneParams
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetBonneParams
 * Signature: (IILgeotrans/projections/Bonne;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetBonneParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetBonneCoordinates
 * Signature: (II)Lgeotrans/projections/Bonne;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetBonneCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetBonneCoordinates
 * Signature: (IILgeotrans/projections/Bonne;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetBonneCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetCassiniParams
 * Signature: (II)Lgeotrans/projections/Cassini;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetCassiniParams
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetCassiniParams
 * Signature: (IILgeotrans/projections/Cassini;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetCassiniParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetCassiniCoordinates
 * Signature: (II)Lgeotrans/projections/Cassini;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetCassiniCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetCassiniCoordinates
 * Signature: (IILgeotrans/projections/Cassini;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetCassiniCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetCylindricalEqualAreaParams
 * Signature: (II)Lgeotrans/projections/CylindricalEqualArea;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetCylindricalEqualAreaParams
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetCylindricalEqualAreaParams
 * Signature: (IILgeotrans/projections/CylindricalEqualArea;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetCylindricalEqualAreaParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetCylindricalEqualAreaCoordinates
 * Signature: (II)Lgeotrans/projections/CylindricalEqualArea;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetCylindricalEqualAreaCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetCylindricalEqualAreaCoordinates
 * Signature: (IILgeotrans/projections/CylindricalEqualArea;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetCylindricalEqualAreaCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetEckert4Params
 * Signature: (II)Lgeotrans/projections/Eckert4;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetEckert4Params
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetEckert4Params
 * Signature: (IILgeotrans/projections/Eckert4;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetEckert4Params
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetEckert4Coordinates
 * Signature: (II)Lgeotrans/projections/Eckert4;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetEckert4Coordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetEckert4Coordinates
 * Signature: (IILgeotrans/projections/Eckert4;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetEckert4Coordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetEckert6Params
 * Signature: (II)Lgeotrans/projections/Eckert6;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetEckert6Params
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetEckert6Params
 * Signature: (IILgeotrans/projections/Eckert6;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetEckert6Params
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetEckert6Coordinates
 * Signature: (II)Lgeotrans/projections/Eckert6;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetEckert6Coordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetEckert6Coordinates
 * Signature: (IILgeotrans/projections/Eckert6;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetEckert6Coordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetEquidistantCylindricalParams
 * Signature: (II)Lgeotrans/projections/EquidistantCylindrical;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetEquidistantCylindricalParams
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetEquidistantCylindricalParams
 * Signature: (IILgeotrans/projections/EquidistantCylindrical;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetEquidistantCylindricalParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetEquidistantCylindricalCoordinates
 * Signature: (II)Lgeotrans/projections/EquidistantCylindrical;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetEquidistantCylindricalCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetEquidistantCylindricalCoordinates
 * Signature: (IILgeotrans/projections/EquidistantCylindrical;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetEquidistantCylindricalCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetGARSCoordinates
 * Signature: (II)Lgeotrans/projections/GARS;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetGARSCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetGARSCoordinates
 * Signature: (IILgeotrans/projections/GARS;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetGARSCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetGeocentricCoordinates
 * Signature: (II)Lgeotrans/projections/Geocentric;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetGeocentricCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetGeocentricCoordinates
 * Signature: (IILgeotrans/projections/Geocentric;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetGeocentricCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetGeodeticParams
 * Signature: (II)Lgeotrans/projections/Geodetic;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetGeodeticParams
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetGeodeticParams
 * Signature: (IILgeotrans/projections/Geodetic;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetGeodeticParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetGeodeticCoordinates
 * Signature: (II)Lgeotrans/projections/Geodetic;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetGeodeticCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetGeodeticCoordinates
 * Signature: (IILgeotrans/projections/Geodetic;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetGeodeticCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetGEOREFCoordinates
 * Signature: (II)Lgeotrans/projections/GEOREF;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetGEOREFCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetGEOREFCoordinates
 * Signature: (IILgeotrans/projections/GEOREF;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetGEOREFCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetGnomonicParams
 * Signature: (II)Lgeotrans/projections/Gnomonic;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetGnomonicParams
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetGnomonicParams
 * Signature: (IILgeotrans/projections/Gnomonic;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetGnomonicParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetGnomonicCoordinates
 * Signature: (II)Lgeotrans/projections/Gnomonic;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetGnomonicCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetGnomonicCoordinates
 * Signature: (IILgeotrans/projections/Gnomonic;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetGnomonicCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetLambertConformalConic1Params
 * Signature: (II)Lgeotrans/projections/LambertConformalConic1;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetLambertConformalConic1Params
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetLambertConformalConic1Params
 * Signature: (IILgeotrans/projections/LambertConformalConic1;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetLambertConformalConic1Params
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetLambertConformalConic1Coordinates
 * Signature: (II)Lgeotrans/projections/LambertConformalConic1;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetLambertConformalConic1Coordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetLambertConformalConic1Coordinates
 * Signature: (IILgeotrans/projections/LambertConformalConic1;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetLambertConformalConic1Coordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetLambertConformalConic2Params
 * Signature: (II)Lgeotrans/projections/LambertConformalConic2;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetLambertConformalConic2Params
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetLambertConformalConic2Params
 * Signature: (IILgeotrans/projections/LambertConformalConic2;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetLambertConformalConic2Params
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetLambertConformalConic2Coordinates
 * Signature: (II)Lgeotrans/projections/LambertConformalConic2;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetLambertConformalConic2Coordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetLambertConformalConic2Coordinates
 * Signature: (IILgeotrans/projections/LambertConformalConic2;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetLambertConformalConic2Coordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetLocalCartesianParams
 * Signature: (II)Lgeotrans/projections/LocalCartesian;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetLocalCartesianParams
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetLocalCartesianParams
 * Signature: (IILgeotrans/projections/LocalCartesian;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetLocalCartesianParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetLocalCartesianCoordinates
 * Signature: (II)Lgeotrans/projections/LocalCartesian;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetLocalCartesianCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetLocalCartesianCoordinates
 * Signature: (IILgeotrans/projections/LocalCartesian;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetLocalCartesianCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetMercatorParams
 * Signature: (II)Lgeotrans/projections/Mercator;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetMercatorParams
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetMercatorParams
 * Signature: (IILgeotrans/projections/Mercator;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetMercatorParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetMercatorCoordinates
 * Signature: (II)Lgeotrans/projections/Mercator;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetMercatorCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetMercatorCoordinates
 * Signature: (IILgeotrans/projections/Mercator;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetMercatorCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetMGRSCoordinates
 * Signature: (II)Lgeotrans/projections/MGRS;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetMGRSCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetMGRSCoordinates
 * Signature: (IILgeotrans/projections/MGRS;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetMGRSCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetMillerCylindricalParams
 * Signature: (II)Lgeotrans/projections/MillerCylindrical;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetMillerCylindricalParams
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetMillerCylindricalParams
 * Signature: (IILgeotrans/projections/MillerCylindrical;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetMillerCylindricalParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetMillerCylindricalCoordinates
 * Signature: (II)Lgeotrans/projections/MillerCylindrical;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetMillerCylindricalCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetMillerCylindricalCoordinates
 * Signature: (IILgeotrans/projections/MillerCylindrical;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetMillerCylindricalCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetMollweideParams
 * Signature: (II)Lgeotrans/projections/Mollweide;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetMollweideParams
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetMollweideParams
 * Signature: (IILgeotrans/projections/Mollweide;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetMollweideParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetMollweideCoordinates
 * Signature: (II)Lgeotrans/projections/Mollweide;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetMollweideCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetMollweideCoordinates
 * Signature: (IILgeotrans/projections/Mollweide;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetMollweideCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetNeysParams
 * Signature: (II)Lgeotrans/projections/Neys;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetNeysParams
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetNeysParams
 * Signature: (IILgeotrans/projections/Neys;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetNeysParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetNeysCoordinates
 * Signature: (II)Lgeotrans/projections/Neys;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetNeysCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetNeysCoordinates
 * Signature: (IILgeotrans/projections/Neys;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetNeysCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetNZMGCoordinates
 * Signature: (II)Lgeotrans/projections/NZMG;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetNZMGCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetNZMGCoordinates
 * Signature: (IILgeotrans/projections/NZMG;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetNZMGCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetObliqueMercatorParams
 * Signature: (II)Lgeotrans/projections/ObliqueMercator;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetObliqueMercatorParams
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetObliqueMercatorParams
 * Signature: (IILgeotrans/projections/ObliqueMercator;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetObliqueMercatorParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetObliqueMercatorCoordinates
 * Signature: (II)Lgeotrans/projections/ObliqueMercator;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetObliqueMercatorCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetObliqueMercatorCoordinates
 * Signature: (IILgeotrans/projections/ObliqueMercator;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetObliqueMercatorCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetOrthographicParams
 * Signature: (II)Lgeotrans/projections/Orthographic;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetOrthographicParams
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetOrthographicParams
 * Signature: (IILgeotrans/projections/Orthographic;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetOrthographicParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetOrthographicCoordinates
 * Signature: (II)Lgeotrans/projections/Orthographic;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetOrthographicCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetOrthographicCoordinates
 * Signature: (IILgeotrans/projections/Orthographic;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetOrthographicCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetPolarStereographicParams
 * Signature: (II)Lgeotrans/projections/PolarStereographic;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetPolarStereographicParams
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetPolarStereographicParams
 * Signature: (IILgeotrans/projections/PolarStereographic;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetPolarStereographicParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetPolarStereographicCoordinates
 * Signature: (II)Lgeotrans/projections/PolarStereographic;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetPolarStereographicCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetPolarStereographicCoordinates
 * Signature: (IILgeotrans/projections/PolarStereographic;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetPolarStereographicCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetPolyconicParams
 * Signature: (II)Lgeotrans/projections/Polyconic;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetPolyconicParams
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetPolyconicParams
 * Signature: (IILgeotrans/projections/Polyconic;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetPolyconicParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetPolyconicCoordinates
 * Signature: (II)Lgeotrans/projections/Polyconic;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetPolyconicCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetPolyconicCoordinates
 * Signature: (IILgeotrans/projections/Polyconic;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetPolyconicCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetSinusoidalParams
 * Signature: (II)Lgeotrans/projections/Sinusoidal;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetSinusoidalParams
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetSinusoidalParams
 * Signature: (IILgeotrans/projections/Sinusoidal;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetSinusoidalParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetSinusoidalCoordinates
 * Signature: (II)Lgeotrans/projections/Sinusoidal;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetSinusoidalCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetSinusoidalCoordinates
 * Signature: (IILgeotrans/projections/Sinusoidal;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetSinusoidalCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetStereographicParams
 * Signature: (II)Lgeotrans/projections/Stereographic;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetStereographicParams
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetStereographicParams
 * Signature: (IILgeotrans/projections/Stereographic;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetStereographicParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetStereographicCoordinates
 * Signature: (II)Lgeotrans/projections/Stereographic;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetStereographicCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetStereographicCoordinates
 * Signature: (IILgeotrans/projections/Stereographic;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetStereographicCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetTransverseCylindricalEqualAreaParams
 * Signature: (II)Lgeotrans/projections/TransverseCylindricalEqualArea;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetTransverseCylindricalEqualAreaParams
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetTransverseCylindricalEqualAreaParams
 * Signature: (IILgeotrans/projections/TransverseCylindricalEqualArea;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetTransverseCylindricalEqualAreaParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetTransverseCylindricalEqualAreaCoordinates
 * Signature: (II)Lgeotrans/projections/TransverseCylindricalEqualArea;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetTransverseCylindricalEqualAreaCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetTransverseCylindricalEqualAreaCoordinates
 * Signature: (IILgeotrans/projections/TransverseCylindricalEqualArea;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetTransverseCylindricalEqualAreaCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetTransverseMercatorParams
 * Signature: (II)Lgeotrans/projections/TransverseMercator;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetTransverseMercatorParams
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetTransverseMercatorParams
 * Signature: (IILgeotrans/projections/TransverseMercator;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetTransverseMercatorParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetTransverseMercatorCoordinates
 * Signature: (II)Lgeotrans/projections/TransverseMercator;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetTransverseMercatorCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetTransverseMercatorCoordinates
 * Signature: (IILgeotrans/projections/TransverseMercator;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetTransverseMercatorCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetUPSCoordinates
 * Signature: (II)Lgeotrans/projections/UPS;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetUPSCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetUPSCoordinates
 * Signature: (IILgeotrans/projections/UPS;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetUPSCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetUSNGCoordinates
 * Signature: (II)Lgeotrans/projections/USNG;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetUSNGCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetUSNGCoordinates
 * Signature: (IILgeotrans/projections/USNG;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetUSNGCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetUTMParams
 * Signature: (IILgeotrans/projections/UTM;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetUTMParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetUTMCoordinates
 * Signature: (II)Lgeotrans/projections/UTM;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetUTMCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetUTMCoordinates
 * Signature: (IILgeotrans/projections/UTM;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetUTMCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetVanDerGrintenParams
 * Signature: (II)Lgeotrans/projections/VanDerGrinten;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetVanDerGrintenParams
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetVanDerGrintenParams
 * Signature: (IILgeotrans/projections/VanDerGrinten;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetVanDerGrintenParams
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNIGetVanDerGrintenCoordinates
 * Signature: (II)Lgeotrans/projections/VanDerGrinten;
 */
JNIEXPORT jobject JNICALL Java_geotrans_jni_JNIEngine_JNIGetVanDerGrintenCoordinates
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     geotrans_jni_JNIEngine
 * Method:    JNISetVanDerGrintenCoordinates
 * Signature: (IILgeotrans/projections/VanDerGrinten;)V
 */
JNIEXPORT void JNICALL Java_geotrans_jni_JNIEngine_JNISetVanDerGrintenCoordinates
  (JNIEnv *, jobject, jint, jint, jobject);

#ifdef __cplusplus
}
#endif
#endif
